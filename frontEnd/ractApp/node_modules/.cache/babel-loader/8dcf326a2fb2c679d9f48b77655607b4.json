{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Hudi/Desktop/cluj_Who_from_repo/ClujWho/frontEnd/ractApp/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(sagaGenerators),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(loginSaga);/* eslint-disable @typescript-eslint/explicit-module-boundary-types */ /* eslint-disable @typescript-eslint/no-inferrable-types */import axios from'axios';import{take,call}from'@redux-saga/core/effects';import{takeEvery}from'redux-saga/effects';import*as action from'./login.actions';import{URL}from'./login.types';export function loginFC(payload){var account=payload.account,history=payload.history;axios.post(\"\".concat(URL,\"/login\"),account).then(function(res){// console.log('Login status:', res.statusText);\nif(res.statusText=='Logged in'){history.push('./account');alert('Successful Login');}}).catch(function(err){alert(err.response.statusText);});}export function sagaGenerators(){var _yield$take,payload;return _regeneratorRuntime.wrap(function sagaGenerators$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return take(action.login);case 2:_yield$take=_context.sent;payload=_yield$take.payload;_context.next=6;return call(loginFC,payload);case 6:case\"end\":return _context.stop();}}},_marked);}function login(action){loginFC(action.payload);}export default function loginSaga(){return _regeneratorRuntime.wrap(function loginSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery('LOGIN',login);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["C:/Users/Hudi/Desktop/cluj_Who_from_repo/ClujWho/frontEnd/ractApp/src/pages/login/login.saga.ts"],"names":["sagaGenerators","loginSaga","axios","take","call","takeEvery","action","URL","loginFC","payload","account","history","post","then","res","statusText","push","alert","catch","err","response","login"],"mappings":"6LAwBiBA,c,iDASQC,S,EAjCzB,sE,CACA,2DACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,0BAA3B,CACA,OAASC,SAAT,KAA0B,oBAA1B,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,iBAAxB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,SAASC,CAAAA,OAAT,CAAiBC,OAAjB,CAAqC,CAC1C,GAAQC,CAAAA,OAAR,CAA6BD,OAA7B,CAAQC,OAAR,CAAiBC,OAAjB,CAA6BF,OAA7B,CAAiBE,OAAjB,CACAT,KAAK,CACFU,IADH,WACWL,GADX,WACwBG,OADxB,EAEGG,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX;AACA,GAAIA,GAAG,CAACC,UAAJ,EAAkB,WAAtB,CAAmC,CACjCJ,OAAO,CAACK,IAAR,CAAa,WAAb,EACAC,KAAK,CAAC,kBAAD,CAAL,CACD,CACF,CARH,EASGC,KATH,CASS,SAAAC,GAAG,CAAI,CACZF,KAAK,CAACE,GAAG,CAACC,QAAJ,CAAaL,UAAd,CAAL,CACD,CAXH,EAYD,CAED,MAAO,SAAUf,CAAAA,cAAV,kKACe,MAAMG,CAAAA,IAAI,CAACG,MAAM,CAACe,KAAR,CAAV,CADf,iCACGZ,OADH,aACGA,OADH,iBAEL,MAAML,CAAAA,IAAI,CAACI,OAAD,CAAUC,OAAV,CAAV,CAFK,sDAKP,QAASY,CAAAA,KAAT,CAAef,MAAf,CAA4B,CAC1BE,OAAO,CAACF,MAAM,CAACG,OAAR,CAAP,CACD,CAED,cAAe,SAAUR,CAAAA,SAAV,yIACb,MAAMI,CAAAA,SAAS,CAAC,OAAD,CAAUgB,KAAV,CAAf,CADa","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\nimport axios from 'axios'\r\nimport { take, call } from '@redux-saga/core/effects'\r\nimport { takeEvery } from 'redux-saga/effects'\r\nimport * as action from './login.actions'\r\nimport { URL } from './login.types'\r\n\r\nexport function loginFC(payload: any): void {\r\n  const { account, history } = payload;\r\n  axios\r\n    .post(`${URL}/login`, account)\r\n    .then(res => {\r\n      // console.log('Login status:', res.statusText);\r\n      if (res.statusText == 'Logged in') {\r\n        history.push('./account')\r\n        alert('Successful Login')\r\n      }\r\n    })\r\n    .catch(err => {\r\n      alert(err.response.statusText);\r\n    });\r\n}\r\n\r\nexport function* sagaGenerators() {\r\n  const { payload } = yield take(action.login);\r\n  yield call(loginFC, payload)\r\n}\r\n\r\nfunction login(action: any) {\r\n  loginFC(action.payload)\r\n}\r\n\r\nexport default function* loginSaga(): any {\r\n  yield takeEvery('LOGIN', login) //? pot sa fac call-ul de cate ori vreau\r\n  //   yield all([sagaGenerators()]); //? pot sa fac un singur call\r\n  //? OK cauta ce si de ce\r\n}\r\n"]},"metadata":{},"sourceType":"module"}