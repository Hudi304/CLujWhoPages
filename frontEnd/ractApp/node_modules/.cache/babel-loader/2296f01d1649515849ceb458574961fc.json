{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hudi\\\\Desktop\\\\cluj_Who_from_repo\\\\ClujWho\\\\frontEnd\\\\ractApp\\\\src\\\\pages\\\\login\\\\login.tsx\",\n    _s = $RefreshSig$();\n\nimport './login.scss';\nimport '../../common-components/common.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { login } from './login.actions';\nimport { useHistory } from 'react-router-dom';\nimport { NavBarComponent } from './components/navbar/navbar-component';\nimport { useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport './login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const history = useHistory();\n  const [navBarClasses, setNavBarClasses] = useState('');\n  const [ref, inView] = useInView({\n    threshold: 0.5\n  });\n  useEffect(() => {\n    console.log('IN VIEW', inView);\n\n    if (inView) {\n      setNavBarClasses('');\n    } else {\n      setNavBarClasses('nav-bar-active');\n    }\n  }, [inView]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `nav-bar-container`,\n      children: /*#__PURE__*/_jsxDEV(NavBarComponent, {\n        inView: inView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-grid-container debug\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-grid-item debug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-grid-item debug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-grid-item debug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"cBSS/GTnUusEyI5MZ62bF+gNCww=\", false, function () {\n  return [useHistory, useInView];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => ({ ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({\n    login\n  }, dispatch)\n});\n\nexport const LoginPage = connect(mapStateToProps, mapDispatchToProps)(Login); // conecteaza pagina la store, deci avem access la store\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Hudi/Desktop/cluj_Who_from_repo/ClujWho/frontEnd/ractApp/src/pages/login/login.tsx"],"names":["connect","bindActionCreators","login","useHistory","NavBarComponent","useEffect","useState","useInView","Login","props","history","navBarClasses","setNavBarClasses","ref","inView","threshold","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","LoginPage"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAO,qCAAP;AAEA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,eAAT,QAAgC,sCAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAiBC,SAAjB,QAAkC,6BAAlC;AACA,OAAO,cAAP;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAwC;AAAA;;AACpC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBP,SAAS,CAAC;AAC5BQ,IAAAA,SAAS,EAAE;AADiB,GAAD,CAA/B;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;;AACA,QAAIA,MAAJ,EAAY;AACRF,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,KAFD,MAEO;AACHA,MAAAA,gBAAgB,CAAC,gBAAD,CAAhB;AACH;AACJ,GAPQ,EAON,CAACE,MAAD,CAPM,CAAT;AASA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA,6BACI,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAmBH;;GArCQL,K;UACWL,U,EAIMI,S;;;KALjBC,K;;AAuCT,MAAMU,eAAe,GAAIC,KAAD,KAAiB,EACrC,GAAGA;AADkC,CAAjB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAoB;AAAEA,EAAAA,QAAF;AAAY,KAAGpB,kBAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYmB,QAAZ;AAAjC,CAApB,CAA3B;;AAEA,OAAO,MAAMC,SAAS,GAAGtB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,KAA7C,CAAlB,C,CACP","sourcesContent":["import './login.scss'\r\nimport '../../common-components/common.scss'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { login } from './login.actions'\r\nimport { LoginData } from './login.types'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { NavBarComponent } from './components/navbar/navbar-component'\r\nimport { useEffect, useState } from 'react'\r\nimport InView, { useInView } from 'react-intersection-observer'\r\nimport './login.scss'\r\n\r\nfunction Login(props: any): JSX.Element {\r\n    const history = useHistory()\r\n\r\n    const [navBarClasses, setNavBarClasses] = useState('')\r\n\r\n    const [ref, inView] = useInView({\r\n        threshold: 0.5\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('IN VIEW', inView)\r\n        if (inView) {\r\n            setNavBarClasses('')\r\n        } else {\r\n            setNavBarClasses('nav-bar-active')\r\n        }\r\n    }, [inView])\r\n\r\n    return (\r\n        <>\r\n            <div className={`nav-bar-container`}>\r\n                <NavBarComponent inView={inView} />\r\n            </div>\r\n            <div className=\"page-grid-container debug\">\r\n                <div ref={ref}>\r\n                    <div className=\"page-grid-item debug\">\r\n                        {/* <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n\r\n                        <h2>Element is inside the viewport: {inView.toString()}</h2> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"page-grid-item debug\"></div>\r\n                <div className=\"page-grid-item debug\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({ dispatch, ...bindActionCreators({ login }, dispatch) })\r\n\r\nexport const LoginPage = connect(mapStateToProps, mapDispatchToProps)(Login)\r\n// conecteaza pagina la store, deci avem access la store\r\n"]},"metadata":{},"sourceType":"module"}