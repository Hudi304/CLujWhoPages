{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Hudi/Desktop/cluj_Who_from_repo/ClujWho/frontEnd/ractApp/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(accountSaga);import axios from'axios';import{takeEvery}from'redux-saga/effects';import{URL}from'../../common-components/utils';export function saveChangesFC(payload){var account=payload.account,history=payload.history;console.log(\"saveChangesFC : payload = \",payload);axios.post(\"\".concat(URL,\"/saveChanges\"),payload).then(function(res){// console.log('Login status:', res.statusText);\nif(res.statusText=='Logged in'){history.push('./account');alert('Successful Login');}}).catch(function(err){alert(err.response);});}function saveChanges(action){// console.log(action.payload)\nsaveChangesFC(action.payload);}export default function accountSaga(){return _regeneratorRuntime.wrap(function accountSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery('SAVE_CHANGES',saveChanges);case 2:case\"end\":return _context.stop();}}},_marked);}","map":{"version":3,"sources":["C:/Users/Hudi/Desktop/cluj_Who_from_repo/ClujWho/frontEnd/ractApp/src/pages/account/account.saga.ts"],"names":["accountSaga","axios","takeEvery","URL","saveChangesFC","payload","account","history","console","log","post","then","res","statusText","push","alert","catch","err","response","saveChanges","action"],"mappings":"6LA0ByBA,W,EA1BzB,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAUC,SAAV,KAA0B,oBAA1B,CACA,OAASC,GAAT,KAAoB,+BAApB,CAEA,MAAO,SAASC,CAAAA,aAAT,CAAuBC,OAAvB,CAA2C,CAC9C,GAAQC,CAAAA,OAAR,CAA6BD,OAA7B,CAAQC,OAAR,CAAiBC,OAAjB,CAA6BF,OAA7B,CAAiBE,OAAjB,CACAC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CJ,OAA1C,EACAJ,KAAK,CACAS,IADL,WACaP,GADb,iBACgCE,OADhC,EAEKM,IAFL,CAEU,SAAAC,GAAG,CAAI,CACT;AACA,GAAIA,GAAG,CAACC,UAAJ,EAAkB,WAAtB,CAAmC,CAC/BN,OAAO,CAACO,IAAR,CAAa,WAAb,EACAC,KAAK,CAAC,kBAAD,CAAL,CACH,CACJ,CARL,EASKC,KATL,CASW,SAAAC,GAAG,CAAI,CACVF,KAAK,CAACE,GAAG,CAACC,QAAL,CAAL,CACH,CAXL,EAYH,CAED,QAASC,CAAAA,WAAT,CAAqBC,MAArB,CAAkC,CAC9B;AACAhB,aAAa,CAACgB,MAAM,CAACf,OAAR,CAAb,CACH,CAED,cAAe,SAAUL,CAAAA,WAAV,uIACX,MAAME,CAAAA,SAAS,CAAC,cAAD,CAAiBiB,WAAjB,CAAf,CADW","sourcesContent":["import axios from 'axios'\r\nimport {  takeEvery} from 'redux-saga/effects'\r\nimport { URL } from '../../common-components/utils'\r\n\r\nexport function saveChangesFC(payload: any): void {\r\n    const { account, history } = payload\r\n    console.log(\"saveChangesFC : payload = \", payload)\r\n    axios\r\n        .post(`${URL}/saveChanges`, payload)\r\n        .then(res => {\r\n            // console.log('Login status:', res.statusText);\r\n            if (res.statusText == 'Logged in') {\r\n                history.push('./account')\r\n                alert('Successful Login')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err.response)\r\n        })\r\n}\r\n\r\nfunction saveChanges(action: any) {\r\n    // console.log(action.payload)\r\n    saveChangesFC(action.payload)\r\n}\r\n\r\nexport default function* accountSaga(): any {\r\n    yield takeEvery('SAVE_CHANGES', saveChanges) //? pot sa fac call-ul de cate ori vreau\r\n    //   yield all([sagaGenerators()]); //? pot sa fac un singur call\r\n    //? OK cauta ce si de ce\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}